#!/usr/bin/env bash

# Copyright 2024 Heath Stewart
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e


usage() {
  local PROG="$0"
  local REGEX="([/\\])gh\1"
  if [[ "${0,,}" =~ $REGEX ]]; then
    local PROG='gh cargo-gist'
  fi

  cat <<EOF
Clone a gist into a cargo project.

USAGE
  $PROG gist <gist> [flags]

FLAGS
  --no-vscode      Exclude Visual Studio Code configuration files.
  -o, --out <dir>  Create project in <dir>. Default is <gist>.
  -h, --help       Print this help message.
EOF
}

VSCODE=1

while [[ $# -gt 0 ]]; do
  case $1 in
    --no-vscode)
      VSCODE=
      shift
      ;;
    -o|--out)
      DIR="$2"
      shift
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    -*|--*)
      echo "Unknown option: $1"
      exit 1
      ;;
    *)
      GIST="$1"
      shift
      ;;
  esac
done

if [[ -z "$GIST" ]]; then
  echo -e "Error: gist ID or URL is required.\n" >&2
  usage >&2
  exit 1
fi

finally() {
  popd > /dev/null
}

mkdir -p "${DIR:=$GIST}"
pushd "$DIR" > /dev/null
trap finally EXIT

cat <<EOF > '.editorconfig'
root = true

[*]
indent_size = 4
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true
EOF

cat <<EOF > '.gitignore'
/target
EOF

cat <<EOF > 'Cargo.toml'
[package]
name = "gist"
version = "0.1.0"
edition = "2021"
publish = false
EOF

cat <<EOF > 'rust-toolchain.toml'
[toolchain]
components = ["cargo", "clippy", "rustfmt"]
EOF

if [[ -n "$VSCODE" ]]; then
  mkdir -p .vscode

  cat <<EOF > '.vscode/extensions.json'
{
  "recommendations": [
    "editorconfig.editorconfig",
    "rust-lang.rust-analyzer"
  ]
}
EOF

  cat <<EOF > '.vscode/settings.json'
{
  "rust-analyzer.cargo.features": "all",
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.checkOnSave": true
}
EOF
fi

gh gist clone "$GIST" src/
